#
# For a description of the syntax of this configuration file,
# see the file kconfig-language.txt in the NuttX tools repository.
#

menuconfig SENSORS
	bool "Sensor Drivers"

if SENSORS

config BMI160
	bool "Bosch BMI160 Sensor support"
	default n
	select CXD56_SPI
	---help---
		Enable driver support for the Bosch BMI160 sensor.

if BMI160

choice
	prompt "BMI160 Interface"
	default BMI160_SPI

config BMI160_SPI
	bool "BMI160 SPI Interface"
	select CXD56_SPI
	---help---
		Enables support for the SPI interface.

config BMI160_I2C
	bool "BMI160 I2C Interface"
	select CXD56_I2C
	---help---
		Enables support for the I2C interface

endchoice

config BMI160_SCU
	bool "SCU Sequencer"
	default y
	depends on CXD56_SCU
	---help---
		Use the sensor control unit (SCU) sequencer.

endif # BMI160

config BMP280
	bool "Bosch BMP280 Barometic Pressure Sensor"
	default n
	select CXD56_I2C
	---help---
		Enable driver for the Bosch BMP280 barometic pressure sensor.

if BMP280

config BMP280_SCU
	bool "SCU Sequencer"
	default y
	depends on CXD56_SCU
	---help---
		Use the sensor control unit (SCU) sequencer.

endif # BMP280

config AK09912
	bool "Asahi AK09911/AK09912 Compass Sensor"
	default n
	select CXD56_I2C
	---help---
		Enable driver for AK09911/AK09912 Compass sensor.

if AK09912

config AK09912_SCU
	bool "SCU Sequencer"
	default y
	depends on CXD56_SCU
	---help---
		Use the sensor control unit (SCU) sequencer.

endif # AK09912

config APDS9930
	bool "Avago APDS9930 Proximity and Ambient light Sensor"
	default n
	select CXD56_I2C
	---help---
		Enable driver for APDS9930 proximity and ambient light sensor.

if APDS9930

config APDS9930_SCU
	bool "SCU Sequencer"
	default y
	depends on CXD56_SCU
	---help---
		Use the sensor control unit (SCU) sequencer.

config APDS9930_PROXIMITY_INTERRUPT
	bool "Use Proximity interrupt"
	default y
	---help---
		Use Interrupt when the threshold is exceeded.
		In this case, SCU sequencer is not used.

endif

config APDS9960
	bool "Avago APDS9960 Proximity, Ambient light, RGB and Gesture Sensor support"
	default n
	select CXD56_I2C
	---help---
		Enable driver support for APDS9960 proximity, ambient light, RGB and gesture sensor.

config LT1PA01
	bool "Murata LT1PA01 Proximity and Ambient light Sensor"
	default n
	select CXD56_I2C
	---help---
		Enable driver for LT1PA01 proximity and ambient light sensor.

if LT1PA01

config LT1PA01_SCU
	bool "SCU Sequencer"
	default y
	depends on CXD56_SCU
	---help---
		Use the sensor control unit (SCU) sequencer.

config LT1PA01_PROXIMITY_INTERRUPT
	bool "Use Proximity interrupt"
	default y
	---help---
		Use Interrupt when the threshold is exceeded.
		In this case, SCU sequencer is not used.

endif

config BH1721FVC
	bool "Rohm BH1721FVC Ambient Light Sensor"
	default n
	select CXD56_I2C
	---help---
		Enable driver for the Rohm BH1721FVC light sensor.

if BH1721FVC

config BH1721FVC_SCU
	bool "SCU Sequencer"
	default y
	depends on CXD56_SCU
	---help---
		Use the sensor control unit (SCU) sequencer.

endif # BH1721FVC

config KX022
	bool "Kionix KX022/KX122 Acceleration Sensor"
	default n
	select CXD56_I2C
	---help---
		Enable driver for the Kionix KX022/KX122 acceleration sensor.

if KX022

config KX022_SCU
	bool "SCU Sequencer"
	default y
	depends on CXD56_SCU
	---help---
		Use the sensor control unit (SCU) sequencer.
		Support only driver with the sensor control unit (SCU) sequencer.

config KX122
	bool "KX122"
	default n
	---help---
		Use KX122 which has the register upper compatibility with KX022.

endif # KX022

config BM1422GMV
	bool "Rohm BM1422GMV/BM1422AGMV Magnetic Sensor"
	default n
	select CXD56_I2C
	---help---
		Enable driver for BM1422GMV/BM1422AGMV magnetic sensor.

if BM1422GMV

choice
	prompt "Slave Address"
	default BM1422GMV_SLAVE_ADDRESS_0F

config BM1422GMV_SLAVE_ADDRESS_0E
	bool "0x0E"

config BM1422GMV_SLAVE_ADDRESS_0F
	bool "0x0F"

endchoice

config BM1422GMV_SCU
	bool "SCU Sequencer"
	default y
	depends on CXD56_SCU
	---help---
		Use the sensor control unit (SCU) sequencer.

endif # BM1422GMV

config BM1383GLV
	bool "Rohm BM1383GLV/BM1383AGLV Pressure Sensor"
	default n
	select CXD56_I2C
	---help---
		Enable driver for BM1383GLV/BM1383AGLV pressure sensor.

if BM1383GLV

config BM1383GLV_SCU
	bool "SCU Sequencer"
	default y
	depends on CXD56_SCU
	---help---
		Use the sensor control unit (SCU) sequencer.

config BM1383AGLV
	bool "BM1383AGLV"
	default n
	---help---
		Use BM1383AGLV registers.

endif # BM1383GLV

config BH1745NUC
	bool "Rohm BH1745NUC Color Sensor"
	default n
	select CXD56_I2C
	---help---
		Enable driver for BH1745NUC color sensor.

if BH1745NUC

config BH1745NUC_SCU
	bool "SCU Sequencer"
	default y
	depends on CXD56_SCU
	---help---
		Use the sensor control unit (SCU) sequencer.

endif # BH1745NUC

config RPR0521RS
	bool "Rohm RPR0521RS Proximity and Ambient light Sensor"
	default n
	select CXD56_I2C
	---help---
		Enable driver for RPR0521RS proximity and ambient light sensor.

if RPR0521RS

config RPR0521RS_SCU
	bool "SCU Sequencer"
	default y
	depends on CXD56_SCU
	---help---
		Use the sensor control unit (SCU) sequencer.

config RPR0521RS_PROXIMITY_INTERRUPT
	bool "Use Proximity interrupt"
	default y
	---help---
		Use Interrupt when the threshold is exceeded.
		In this case, SCU sequencer is not used.

endif

endif # SENSORS
